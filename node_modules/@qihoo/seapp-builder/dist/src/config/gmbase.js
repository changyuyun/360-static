"use strict";
var _a = require('../helper/path'), relativeToSrc = _a.relativeToSrc, relativeToCwd = _a.relativeToCwd;
var getPageFileTypeMap = require('../helper/util').getPageFileTypeMap;
var path = require('path');
var babelConfig = require('./babel');
var limit = 8192;
var webpackConfig = (module.exports = new (require('webpack-chain'))());
var whiteList = [
    'png',
    'jpg',
    'jpeg',
    'gif',
    'svg',
    'json',
    'cer',
    'obj',
    'dae',
    'fbx',
    'mtl',
    'stl',
    '3ds',
    'mp3',
    'pvr',
    'wav',
    'plist',
    'ttf',
    'fnt',
    'gz',
    'ccz',
    'm4a',
    'mp4',
    'bmp',
    'atlas',
    'swf',
    'ani',
    'part',
    'proto',
    'bin',
    'sk',
    'mipmaps',
    'txt',
    'zip',
    'tt',
    'map',
    'ogg',
    'silk',
    'dbbin',
    'dbmv',
    'etc',
    'lmat',
    'lm',
    'ls',
    'lh',
    'lani',
    'lav',
    'lsani',
    'ltc'
];
webpackConfig.module
    .rule('compile')
    .test(/\.js$/)
    .use('cache-loader')
    .loader('cache-loader')
    .end()
    .use('babel-loader')
    .loader('babel-loader')
    .options(babelConfig)
    .end()
    .use('build-game')
    .loader(relativeToSrc('./loaders/build-game.js'));
webpackConfig
    .plugin('copy-webpack-plugin')
    .use(require('copy-webpack-plugin'), [
    [
        {
            from: {
                glob: "**/*.@(" + whiteList.join('|') + ")",
                dot: false,
                cache: 'FILE',
                // optimize globby iteration
                ignore: ['dist/**', 'node_modules/**']
            },
            to: './'
        }
    ],
    {
        ignore: [
            'dist/**',
            'node_modules/**',
            'package.json',
            'package-lock.json',
            'yarn.lock',
            'project.config.json'
        ]
    }
])
    .end()
    .plugin('replace-game-json-plugin')
    .use(require('../plugins/ReplaceGameJsonPlugin'));
//# sourceMappingURL=gmbase.js.map
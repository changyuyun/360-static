"use strict";
var parse = require('@babel/parser').parse;
var t = require('@babel/types');
var getRouterConfigInfo = require('../helper/util').getRouterConfigInfo;
var _a = require('../helper/constant'), APP_EXPORT_NAME = _a.APP_EXPORT_NAME, APP_MOUNT_SELECTOR = _a.APP_MOUNT_SELECTOR, APP_EXTENDS_NAME = _a.APP_EXTENDS_NAME;
// 路由配置  { path, component, meta }
exports.routerConfigBuilder = function (pageConfig, _a) {
    var router = _a.router, component = _a.component, meta = _a.meta;
    var properties = [];
    if (router && component) {
        properties.push(t.objectProperty(t.stringLiteral('path'), t.stringLiteral(router)), t.objectProperty(t.stringLiteral('component'), t.identifier(component)));
        if (meta) {
            properties.push(t.objectProperty(t.stringLiteral('meta'), t.identifier(meta)));
        }
    }
    return t.objectExpression(properties);
};
// 配置默认路由 { path: '/', redirect: otherPage }
exports.homePageBuilder = function (router) {
    return t.objectExpression([
        t.objectProperty(t.stringLiteral('path'), t.stringLiteral('/')),
        t.objectProperty(t.stringLiteral('redirect'), t.stringLiteral(router))
    ]);
};
// 替换pages ast
exports.replacePageNode = function (node, parent, pageMap, pageFileType) {
    var pageConfig = pageMap.get(node.value);
    var routerConfig = getRouterConfigInfo(pageConfig, pageFileType);
    if (node._isFirstPage) {
        parent.elements.push(exports.homePageBuilder(routerConfig.router));
    }
    return exports.routerConfigBuilder(pageConfig, routerConfig);
};
exports.replaceProgramBody = function (template, ast) {
    var program = parse(template, { sourceType: 'module' }).program;
    program.body[0].expression.arguments.push(ast.program.body[0].expression.right);
    return program;
};
// 设置router 配置， 重组 app.json
exports.reBuildAppConfig = function (routerAst) {
    return exports.replaceProgramBody("window.Seapp.setAppConfig()", routerAst);
};
exports.reBuilder = function (routerAst) {
    return exports.replaceProgramBody("window.Seapp.setAppConfig()", routerAst);
};
exports.reBuildProgram = function (program, body) {
    program.body = body;
};
// 变量声明
exports.varDeclarationContainerBuilder = function (varName) {
    return t.variableDeclaration('let', [
        t.variableDeclarator(t.identifier(varName), t.objectExpression([]))
    ]);
};
// 导入模块
exports.importBuilder = function (varName, modulePath, useDefault) {
    if (useDefault === void 0) { useDefault = true; }
    return t.expressionStatement(t.assignmentExpression('=', t.identifier(varName), useDefault
        ? t.memberExpression(t.callExpression(t.identifier('require'), [
            t.stringLiteral(modulePath)
        ]), t.identifier('default'))
        : t.callExpression(t.identifier('require'), [
            t.stringLiteral(modulePath)
        ])));
};
// 暴露模块
exports.exportsBuilder = function (exportModule) {
    return t.exportDefaultDeclaration(exportModule);
};
// Object.assign()
exports.objectAssignBuilder = function (routerConfig, template) {
    template = template || t.objectExpression([]);
    return t.callExpression(t.memberExpression(t.identifier('Object'), t.identifier('assign')), [template, routerConfig]);
};
// App template
exports.appTemplateBuilder = function (template) {
    return t.objectExpression([
        t.objectProperty(t.stringLiteral('template'), t.stringLiteral("<div id=\"app\"><router-view :key=\"$route.fullPath\"></router-view><component v-for=\"(item, index) in sysComponents\" :key=\"index\" :is='item'></component></div>"))
    ]);
};
exports.startAppBuilder = function (config) {
    return t.expressionStatement(t.callExpression(t.memberExpression(t.newExpression(t.identifier(APP_EXTENDS_NAME), [config]), t.identifier('$mount')), t.stringLiteral(APP_MOUNT_SELECTOR)));
};
// .vue template
exports.vueBuilder = function (_a) {
    var template = _a.template, script = _a.script, style = _a.style;
    return "\n        <template src=\"" + template + "\"></template>\n        <script>" + script + "</script>\n        <style src=\"" + style + "\" scoped></style>\n    ";
};
// 引入vuex
exports.storeBuilder = function (store) {
    return "\n        import store from './" + store + "'\n        const Vuex = require('vuex')\n        window.Vuex = Vuex\n    ";
};
// 实现组件通信机制
exports.communicateToComponentBuilder = function (config, isRequireStore) { return "\nconst sysComponents = " + APP_EXPORT_NAME + ".observable([]);\n" + APP_EXPORT_NAME + ".prototype.$sysComponents = sysComponents;\n" + APP_EXPORT_NAME + ".prototype.$rmSysComponents = function (...comps) {\n  comps.forEach(comp => {\n    const index = sysComponents.indexOf(comp);\n    if (index > -1) {\n      sysComponents.splice(index, 1);\n    }\n  });\n};\nconst " + APP_EXTENDS_NAME + " =  " + APP_EXPORT_NAME + ".extend(" + config + ");\n\n" + (isRequireStore
    ? "Seapp.version = '2.6.0'\n  Seapp.use(Vuex)\n  new " + APP_EXTENDS_NAME + "({\n    data: { sysComponents },\n    store: new Vuex.Store(store)\n  }).$mount('" + APP_MOUNT_SELECTOR + "');"
    : "new " + APP_EXTENDS_NAME + "({\n  data: { sysComponents }\n}).$mount('" + APP_MOUNT_SELECTOR + "');") + "\n"; };
//# sourceMappingURL=builder-model.js.map
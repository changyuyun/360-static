"use strict";
var tslib_1 = require("tslib");
var generator = require('@babel/generator').default;
var parse = require('@babel/parser').parse;
var traverse = require('@babel/traverse').default;
var _a = require('../helper/path'), relativeToCwd = _a.relativeToCwd, relativeToSrc = _a.relativeToSrc;
var walk = require('egret-node-utils').walk;
var path = require('path');
var babel = require("@babel/core");
function executeCommand(filePath, content) {
    var resultContent = "self.define(\"" + filePath + "\", function (require, module, exports, process) {\n\n" +
        babel.transformSync(content, require('../config/babel.js')).code +
        '\n\n});';
    return resultContent;
}
module.exports = function (source) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        function readFile(location) {
            return new Promise(function (resolve, reject) {
                fs.readFile(location, function (err, data) {
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve(data);
                    }
                });
            });
        }
        var callback, fs, distRep, list, header, definedModules, code;
        var _this = this;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (this.cacheable)
                        this.cacheable(true);
                    callback = this.async();
                    if (this.resource !== relativeToCwd('game.js'))
                        return [2 /*return*/, callback(null, source)];
                    fs = this.fs;
                    distRep = new RegExp(relativeToCwd('dist').split(path.sep).join());
                    return [4 /*yield*/, walk(relativeToCwd('/'), function (p) {
                            // 返回除了node_modules, dist文件中的所有js文件路径
                            return (path.extname(p) === '.js' &&
                                !/node_modules/g.test(p) &&
                                !distRep.test(p.split(path.sep).join()));
                        }, {
                            relative: true
                        })];
                case 1:
                    list = _a.sent();
                    return [4 /*yield*/, readFile(relativeToSrc('./helper/header.js'))];
                case 2:
                    header = _a.sent();
                    return [4 /*yield*/, Promise.all(list.map(function (location) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var _a, _b;
                            return tslib_1.__generator(this, function (_c) {
                                switch (_c.label) {
                                    case 0:
                                        this.addDependency(relativeToCwd(location));
                                        _a = executeCommand;
                                        _b = [location];
                                        return [4 /*yield*/, readFile(location)];
                                    case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent()]))];
                                }
                            });
                        }); })).then(function (result) { return result.join('\n'); })];
                case 3:
                    definedModules = _a.sent();
                    code = header + "\n  " + definedModules + "\n  seGameRequire('game.js')\n  ";
                    return [2 /*return*/, callback(null, code)];
            }
        });
    });
};
//# sourceMappingURL=build-game.js.map